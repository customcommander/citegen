const R = require('ramda');
const tap = require('tap');
const findTermText = require('./find-term-text'); // SUT

const find = findTermText(R.__, R.__, R.__, [
  {terms: [
    {name: 'ğŸŒ¯', form: 'long', value: ['ğŸŒ¯', 'ğŸŒ¯ğŸŒ¯ğŸŒ¯']},
    {name: 'ğŸŒ¯', form: 'short', value: ['ğŸŒ®', 'ğŸŒ®ğŸŒ®ğŸŒ®']}]},
  {terms: [
    {name: 'ğŸŒ¶', form: 'long', value: ['ğŸŒ¶']},
    {name: 'ğŸŒ¶', form: 'verb', value: ['ğŸ˜±']}]}]);

tap.equal(find('long', false, 'ğŸŒ¯'), 'ğŸŒ¯');
tap.equal(find('long', true, 'ğŸŒ¯'), 'ğŸŒ¯ğŸŒ¯ğŸŒ¯');
tap.equal(find('short', false, 'ğŸŒ¯'), 'ğŸŒ®');
tap.equal(find('short', true, 'ğŸŒ¯'), 'ğŸŒ®ğŸŒ®ğŸŒ®');
tap.equal(find('long', false, 'ğŸŒ¶'), 'ğŸŒ¶');
tap.equal(find('long', false, 'ğŸ¥‘'), '');
tap.equal(find('symbol', false, 'ğŸŒ¯'), 'ğŸŒ®');
tap.equal(find('verb', false, 'ğŸŒ¯'), 'ğŸŒ¯');
tap.equal(find('symbol', true, 'ğŸŒ¯'), 'ğŸŒ®ğŸŒ®ğŸŒ®');
tap.equal(find('short', false, 'ğŸŒ¶'), 'ğŸŒ¶');
tap.equal(find('verb-short', false, 'ğŸŒ¶'), 'ğŸ˜±');
